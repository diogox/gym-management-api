// <auto-generated />
using System;
using GymAPI.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymAPI.Migrations
{
    [DbContext(typeof(GymContext))]
    partial class GymContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-preview3-35497");

            modelBuilder.Entity("GymAPI.Models.Client", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("FirstName");

                    b.Property<double>("HeightInMeters");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LastName");

                    b.Property<long>("Nif");

                    b.Property<long?>("TrainingPlanId");

                    b.Property<float>("WeightInKg");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.ToTable("Clients");
                });

            modelBuilder.Entity("GymAPI.Models.ClientCheckIn", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("At");

                    b.Property<long?>("ClientId");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientCheckIn");
                });

            modelBuilder.Entity("GymAPI.Models.ClientNotification", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("ClientId");

                    b.Property<bool>("IsUnread");

                    b.Property<string>("Message");

                    b.Property<DateTime>("Timestamp");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ClientNotification");
                });

            modelBuilder.Entity("GymAPI.Models.Equipment", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("BrandName");

                    b.Property<long?>("ExerciseId");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<float>("PriceInEuro");

                    b.Property<int>("Quantity");

                    b.Property<string>("SupplierName");

                    b.HasKey("Id");

                    b.HasIndex("ExerciseId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("GymAPI.Models.Exercise", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.Property<int>("DifficultyLevel");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("Name");

                    b.Property<int>("TargetMuscleGroup");

                    b.Property<long?>("TrainingPlanId");

                    b.Property<long?>("TrainingPlanId1");

                    b.Property<long?>("TrainingPlanId2");

                    b.Property<long?>("TrainingPlanId3");

                    b.Property<long?>("TrainingPlanId4");

                    b.Property<long?>("TrainingPlanId5");

                    b.Property<long?>("TrainingPlanId6");

                    b.HasKey("Id");

                    b.HasIndex("TrainingPlanId");

                    b.HasIndex("TrainingPlanId1");

                    b.HasIndex("TrainingPlanId2");

                    b.HasIndex("TrainingPlanId3");

                    b.HasIndex("TrainingPlanId4");

                    b.HasIndex("TrainingPlanId5");

                    b.HasIndex("TrainingPlanId6");

                    b.ToTable("Exercises");
                });

            modelBuilder.Entity("GymAPI.Models.StaffMember", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<DateTime>("BirthDate");

                    b.Property<string>("Email");

                    b.Property<string>("FirstName");

                    b.Property<bool>("HasBeenPaidThisMonth");

                    b.Property<string>("ImageUrl");

                    b.Property<string>("LastName");

                    b.Property<long>("Nif");

                    b.Property<int>("Rank");

                    b.Property<float>("Salary");

                    b.HasKey("Id");

                    b.ToTable("Staff");
                });

            modelBuilder.Entity("GymAPI.Models.TrainingPlan", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long?>("SupervisingTrainerId");

                    b.HasKey("Id");

                    b.HasIndex("SupervisingTrainerId");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("GymAPI.Models.Client", b =>
                {
                    b.HasOne("GymAPI.Models.TrainingPlan", "TrainingPlan")
                        .WithMany()
                        .HasForeignKey("TrainingPlanId");
                });

            modelBuilder.Entity("GymAPI.Models.ClientCheckIn", b =>
                {
                    b.HasOne("GymAPI.Models.Client")
                        .WithMany("CheckInHistory")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("GymAPI.Models.ClientNotification", b =>
                {
                    b.HasOne("GymAPI.Models.Client")
                        .WithMany("Notifications")
                        .HasForeignKey("ClientId");
                });

            modelBuilder.Entity("GymAPI.Models.Equipment", b =>
                {
                    b.HasOne("GymAPI.Models.Exercise")
                        .WithMany("EquipmentToUse")
                        .HasForeignKey("ExerciseId");
                });

            modelBuilder.Entity("GymAPI.Models.Exercise", b =>
                {
                    b.HasOne("GymAPI.Models.TrainingPlan")
                        .WithMany("FridayExercises")
                        .HasForeignKey("TrainingPlanId");

                    b.HasOne("GymAPI.Models.TrainingPlan")
                        .WithMany("MondayExercises")
                        .HasForeignKey("TrainingPlanId1");

                    b.HasOne("GymAPI.Models.TrainingPlan")
                        .WithMany("SaturdayExercises")
                        .HasForeignKey("TrainingPlanId2");

                    b.HasOne("GymAPI.Models.TrainingPlan")
                        .WithMany("SundayExercises")
                        .HasForeignKey("TrainingPlanId3");

                    b.HasOne("GymAPI.Models.TrainingPlan")
                        .WithMany("ThursdayExercises")
                        .HasForeignKey("TrainingPlanId4");

                    b.HasOne("GymAPI.Models.TrainingPlan")
                        .WithMany("TuesdayExercises")
                        .HasForeignKey("TrainingPlanId5");

                    b.HasOne("GymAPI.Models.TrainingPlan")
                        .WithMany("WednesdayExercises")
                        .HasForeignKey("TrainingPlanId6");
                });

            modelBuilder.Entity("GymAPI.Models.TrainingPlan", b =>
                {
                    b.HasOne("GymAPI.Models.StaffMember", "SupervisingTrainer")
                        .WithMany()
                        .HasForeignKey("SupervisingTrainerId");
                });
#pragma warning restore 612, 618
        }
    }
}
